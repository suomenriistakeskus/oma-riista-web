
package fi.riista.integration.luke_import.model.v1_0;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import com.kscs.util.jaxb.Copyable;
import com.kscs.util.jaxb.PartialCopyable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;


/**
 * <p>Java class for _8.2Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="_8.2Type"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="_Aikuiset_urokset" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="_Aikuiset_naaraat" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="_Urosvasat" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="_Naarasvasat" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="_Maksettava_120" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="_Maksettava_50" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="_Ihmisravinnoksi_kelpaamattom_aikuiset" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="_Vähennä_120" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="_Ihmisravinnoksi_kelpaamattom_vasat" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="_Vähennä_50" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="_Yhteensä_maksettavaa" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;anyAttribute namespace='http://www.abbyy.com/FlexiCapture/Schemas/Export/AdditionalFormData.xsd'/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "_8.2Type", namespace = "http://www.abbyy.com/FlexiCapture/Schemas/Export/Hirvitietokortti.xsd", propOrder = {
    "numberOfAdultMales",
    "numberOfAdultFemales",
    "numberOfYoungMales",
    "numberOfYoungFemales",
    "paymentAmountForEdibleAdults",
    "paymentAmountForEdibleYoungs",
    "totalNumberOfNonEdibleAdults",
    "paymentAmountForNonEdibleAdults",
    "totalNumberOfNonEdibleYoungs",
    "paymentAmountForNonEdibleYoungs",
    "totalPaymentAmount"
})
public class MooseDataCardSection_8_2 implements Cloneable, Copyable, PartialCopyable, ToString2
{

    @XmlElement(name = "_Aikuiset_urokset", required = true, type = Integer.class, nillable = true)
    protected Integer numberOfAdultMales;
    @XmlElement(name = "_Aikuiset_naaraat", required = true, type = Integer.class, nillable = true)
    protected Integer numberOfAdultFemales;
    @XmlElement(name = "_Urosvasat", required = true, type = Integer.class, nillable = true)
    protected Integer numberOfYoungMales;
    @XmlElement(name = "_Naarasvasat", required = true, type = Integer.class, nillable = true)
    protected Integer numberOfYoungFemales;
    @XmlElement(name = "_Maksettava_120", required = true, nillable = true)
    protected BigDecimal paymentAmountForEdibleAdults;
    @XmlElement(name = "_Maksettava_50", required = true, nillable = true)
    protected BigDecimal paymentAmountForEdibleYoungs;
    @XmlElement(name = "_Ihmisravinnoksi_kelpaamattom_aikuiset", required = true, type = Integer.class, nillable = true)
    protected Integer totalNumberOfNonEdibleAdults;
    @XmlElement(name = "_V\u00e4henn\u00e4_120", required = true, nillable = true)
    protected BigDecimal paymentAmountForNonEdibleAdults;
    @XmlElement(name = "_Ihmisravinnoksi_kelpaamattom_vasat", required = true, type = Integer.class, nillable = true)
    protected Integer totalNumberOfNonEdibleYoungs;
    @XmlElement(name = "_V\u00e4henn\u00e4_50", required = true, nillable = true)
    protected BigDecimal paymentAmountForNonEdibleYoungs;
    @XmlElement(name = "_Yhteens\u00e4_maksettavaa", required = true, nillable = true)
    protected BigDecimal totalPaymentAmount;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
     * 
     */
    public MooseDataCardSection_8_2() {
        // Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
    }

    /**
     * Instantiates a MooseDataCardSection_8_2 copying the state of another MooseDataCardSection_8_2
     * 
     * @param _other
     *     The original MooseDataCardSection_8_2 from which to copy state.
     */
    public MooseDataCardSection_8_2(final MooseDataCardSection_8_2 _other) {
        this.numberOfAdultMales = _other.numberOfAdultMales;
        this.numberOfAdultFemales = _other.numberOfAdultFemales;
        this.numberOfYoungMales = _other.numberOfYoungMales;
        this.numberOfYoungFemales = _other.numberOfYoungFemales;
        this.paymentAmountForEdibleAdults = _other.paymentAmountForEdibleAdults;
        this.paymentAmountForEdibleYoungs = _other.paymentAmountForEdibleYoungs;
        this.totalNumberOfNonEdibleAdults = _other.totalNumberOfNonEdibleAdults;
        this.paymentAmountForNonEdibleAdults = _other.paymentAmountForNonEdibleAdults;
        this.totalNumberOfNonEdibleYoungs = _other.totalNumberOfNonEdibleYoungs;
        this.paymentAmountForNonEdibleYoungs = _other.paymentAmountForNonEdibleYoungs;
        this.totalPaymentAmount = _other.totalPaymentAmount;
    }

    /**
     * Instantiates a MooseDataCardSection_8_2 copying the state of another MooseDataCardSection_8_2
     * 
     * @param _propertyTreeUse
     *     Meaning of the {@link PropertyPath}: Exclude or include members contained in property path.
     * @param _propertyTree
     *     A restricting {@link PropertyPath} that defines which nodes of the source object tree should actually be copied.
     * @param _other
     *     The original MooseDataCardSection_8_2 from which to copy state.
     */
    public MooseDataCardSection_8_2(final MooseDataCardSection_8_2 _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final PropertyTree numberOfAdultMalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfAdultMales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfAdultMalesPropertyTree!= null):((numberOfAdultMalesPropertyTree == null)||(!numberOfAdultMalesPropertyTree.isLeaf())))) {
            this.numberOfAdultMales = _other.numberOfAdultMales;
        }
        final PropertyTree numberOfAdultFemalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfAdultFemales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfAdultFemalesPropertyTree!= null):((numberOfAdultFemalesPropertyTree == null)||(!numberOfAdultFemalesPropertyTree.isLeaf())))) {
            this.numberOfAdultFemales = _other.numberOfAdultFemales;
        }
        final PropertyTree numberOfYoungMalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfYoungMales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfYoungMalesPropertyTree!= null):((numberOfYoungMalesPropertyTree == null)||(!numberOfYoungMalesPropertyTree.isLeaf())))) {
            this.numberOfYoungMales = _other.numberOfYoungMales;
        }
        final PropertyTree numberOfYoungFemalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfYoungFemales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfYoungFemalesPropertyTree!= null):((numberOfYoungFemalesPropertyTree == null)||(!numberOfYoungFemalesPropertyTree.isLeaf())))) {
            this.numberOfYoungFemales = _other.numberOfYoungFemales;
        }
        final PropertyTree paymentAmountForEdibleAdultsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForEdibleAdults"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForEdibleAdultsPropertyTree!= null):((paymentAmountForEdibleAdultsPropertyTree == null)||(!paymentAmountForEdibleAdultsPropertyTree.isLeaf())))) {
            this.paymentAmountForEdibleAdults = _other.paymentAmountForEdibleAdults;
        }
        final PropertyTree paymentAmountForEdibleYoungsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForEdibleYoungs"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForEdibleYoungsPropertyTree!= null):((paymentAmountForEdibleYoungsPropertyTree == null)||(!paymentAmountForEdibleYoungsPropertyTree.isLeaf())))) {
            this.paymentAmountForEdibleYoungs = _other.paymentAmountForEdibleYoungs;
        }
        final PropertyTree totalNumberOfNonEdibleAdultsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("totalNumberOfNonEdibleAdults"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(totalNumberOfNonEdibleAdultsPropertyTree!= null):((totalNumberOfNonEdibleAdultsPropertyTree == null)||(!totalNumberOfNonEdibleAdultsPropertyTree.isLeaf())))) {
            this.totalNumberOfNonEdibleAdults = _other.totalNumberOfNonEdibleAdults;
        }
        final PropertyTree paymentAmountForNonEdibleAdultsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForNonEdibleAdults"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForNonEdibleAdultsPropertyTree!= null):((paymentAmountForNonEdibleAdultsPropertyTree == null)||(!paymentAmountForNonEdibleAdultsPropertyTree.isLeaf())))) {
            this.paymentAmountForNonEdibleAdults = _other.paymentAmountForNonEdibleAdults;
        }
        final PropertyTree totalNumberOfNonEdibleYoungsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("totalNumberOfNonEdibleYoungs"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(totalNumberOfNonEdibleYoungsPropertyTree!= null):((totalNumberOfNonEdibleYoungsPropertyTree == null)||(!totalNumberOfNonEdibleYoungsPropertyTree.isLeaf())))) {
            this.totalNumberOfNonEdibleYoungs = _other.totalNumberOfNonEdibleYoungs;
        }
        final PropertyTree paymentAmountForNonEdibleYoungsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForNonEdibleYoungs"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForNonEdibleYoungsPropertyTree!= null):((paymentAmountForNonEdibleYoungsPropertyTree == null)||(!paymentAmountForNonEdibleYoungsPropertyTree.isLeaf())))) {
            this.paymentAmountForNonEdibleYoungs = _other.paymentAmountForNonEdibleYoungs;
        }
        final PropertyTree totalPaymentAmountPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("totalPaymentAmount"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(totalPaymentAmountPropertyTree!= null):((totalPaymentAmountPropertyTree == null)||(!totalPaymentAmountPropertyTree.isLeaf())))) {
            this.totalPaymentAmount = _other.totalPaymentAmount;
        }
    }

    /**
     * Gets the value of the numberOfAdultMales property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNumberOfAdultMales() {
        return numberOfAdultMales;
    }

    /**
     * Sets the value of the numberOfAdultMales property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberOfAdultMales(Integer value) {
        this.numberOfAdultMales = value;
    }

    /**
     * Gets the value of the numberOfAdultFemales property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNumberOfAdultFemales() {
        return numberOfAdultFemales;
    }

    /**
     * Sets the value of the numberOfAdultFemales property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberOfAdultFemales(Integer value) {
        this.numberOfAdultFemales = value;
    }

    /**
     * Gets the value of the numberOfYoungMales property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNumberOfYoungMales() {
        return numberOfYoungMales;
    }

    /**
     * Sets the value of the numberOfYoungMales property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberOfYoungMales(Integer value) {
        this.numberOfYoungMales = value;
    }

    /**
     * Gets the value of the numberOfYoungFemales property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNumberOfYoungFemales() {
        return numberOfYoungFemales;
    }

    /**
     * Sets the value of the numberOfYoungFemales property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberOfYoungFemales(Integer value) {
        this.numberOfYoungFemales = value;
    }

    /**
     * Gets the value of the paymentAmountForEdibleAdults property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPaymentAmountForEdibleAdults() {
        return paymentAmountForEdibleAdults;
    }

    /**
     * Sets the value of the paymentAmountForEdibleAdults property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPaymentAmountForEdibleAdults(BigDecimal value) {
        this.paymentAmountForEdibleAdults = value;
    }

    /**
     * Gets the value of the paymentAmountForEdibleYoungs property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPaymentAmountForEdibleYoungs() {
        return paymentAmountForEdibleYoungs;
    }

    /**
     * Sets the value of the paymentAmountForEdibleYoungs property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPaymentAmountForEdibleYoungs(BigDecimal value) {
        this.paymentAmountForEdibleYoungs = value;
    }

    /**
     * Gets the value of the totalNumberOfNonEdibleAdults property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getTotalNumberOfNonEdibleAdults() {
        return totalNumberOfNonEdibleAdults;
    }

    /**
     * Sets the value of the totalNumberOfNonEdibleAdults property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTotalNumberOfNonEdibleAdults(Integer value) {
        this.totalNumberOfNonEdibleAdults = value;
    }

    /**
     * Gets the value of the paymentAmountForNonEdibleAdults property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPaymentAmountForNonEdibleAdults() {
        return paymentAmountForNonEdibleAdults;
    }

    /**
     * Sets the value of the paymentAmountForNonEdibleAdults property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPaymentAmountForNonEdibleAdults(BigDecimal value) {
        this.paymentAmountForNonEdibleAdults = value;
    }

    /**
     * Gets the value of the totalNumberOfNonEdibleYoungs property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getTotalNumberOfNonEdibleYoungs() {
        return totalNumberOfNonEdibleYoungs;
    }

    /**
     * Sets the value of the totalNumberOfNonEdibleYoungs property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTotalNumberOfNonEdibleYoungs(Integer value) {
        this.totalNumberOfNonEdibleYoungs = value;
    }

    /**
     * Gets the value of the paymentAmountForNonEdibleYoungs property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPaymentAmountForNonEdibleYoungs() {
        return paymentAmountForNonEdibleYoungs;
    }

    /**
     * Sets the value of the paymentAmountForNonEdibleYoungs property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPaymentAmountForNonEdibleYoungs(BigDecimal value) {
        this.paymentAmountForNonEdibleYoungs = value;
    }

    /**
     * Gets the value of the totalPaymentAmount property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalPaymentAmount() {
        return totalPaymentAmount;
    }

    /**
     * Sets the value of the totalPaymentAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalPaymentAmount(BigDecimal value) {
        this.totalPaymentAmount = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE2;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            Integer theNumberOfAdultMales;
            theNumberOfAdultMales = this.getNumberOfAdultMales();
            strategy.appendField(locator, this, "numberOfAdultMales", buffer, theNumberOfAdultMales, (this.numberOfAdultMales!= null));
        }
        {
            Integer theNumberOfAdultFemales;
            theNumberOfAdultFemales = this.getNumberOfAdultFemales();
            strategy.appendField(locator, this, "numberOfAdultFemales", buffer, theNumberOfAdultFemales, (this.numberOfAdultFemales!= null));
        }
        {
            Integer theNumberOfYoungMales;
            theNumberOfYoungMales = this.getNumberOfYoungMales();
            strategy.appendField(locator, this, "numberOfYoungMales", buffer, theNumberOfYoungMales, (this.numberOfYoungMales!= null));
        }
        {
            Integer theNumberOfYoungFemales;
            theNumberOfYoungFemales = this.getNumberOfYoungFemales();
            strategy.appendField(locator, this, "numberOfYoungFemales", buffer, theNumberOfYoungFemales, (this.numberOfYoungFemales!= null));
        }
        {
            BigDecimal thePaymentAmountForEdibleAdults;
            thePaymentAmountForEdibleAdults = this.getPaymentAmountForEdibleAdults();
            strategy.appendField(locator, this, "paymentAmountForEdibleAdults", buffer, thePaymentAmountForEdibleAdults, (this.paymentAmountForEdibleAdults!= null));
        }
        {
            BigDecimal thePaymentAmountForEdibleYoungs;
            thePaymentAmountForEdibleYoungs = this.getPaymentAmountForEdibleYoungs();
            strategy.appendField(locator, this, "paymentAmountForEdibleYoungs", buffer, thePaymentAmountForEdibleYoungs, (this.paymentAmountForEdibleYoungs!= null));
        }
        {
            Integer theTotalNumberOfNonEdibleAdults;
            theTotalNumberOfNonEdibleAdults = this.getTotalNumberOfNonEdibleAdults();
            strategy.appendField(locator, this, "totalNumberOfNonEdibleAdults", buffer, theTotalNumberOfNonEdibleAdults, (this.totalNumberOfNonEdibleAdults!= null));
        }
        {
            BigDecimal thePaymentAmountForNonEdibleAdults;
            thePaymentAmountForNonEdibleAdults = this.getPaymentAmountForNonEdibleAdults();
            strategy.appendField(locator, this, "paymentAmountForNonEdibleAdults", buffer, thePaymentAmountForNonEdibleAdults, (this.paymentAmountForNonEdibleAdults!= null));
        }
        {
            Integer theTotalNumberOfNonEdibleYoungs;
            theTotalNumberOfNonEdibleYoungs = this.getTotalNumberOfNonEdibleYoungs();
            strategy.appendField(locator, this, "totalNumberOfNonEdibleYoungs", buffer, theTotalNumberOfNonEdibleYoungs, (this.totalNumberOfNonEdibleYoungs!= null));
        }
        {
            BigDecimal thePaymentAmountForNonEdibleYoungs;
            thePaymentAmountForNonEdibleYoungs = this.getPaymentAmountForNonEdibleYoungs();
            strategy.appendField(locator, this, "paymentAmountForNonEdibleYoungs", buffer, thePaymentAmountForNonEdibleYoungs, (this.paymentAmountForNonEdibleYoungs!= null));
        }
        {
            BigDecimal theTotalPaymentAmount;
            theTotalPaymentAmount = this.getTotalPaymentAmount();
            strategy.appendField(locator, this, "totalPaymentAmount", buffer, theTotalPaymentAmount, (this.totalPaymentAmount!= null));
        }
        return buffer;
    }

    public MooseDataCardSection_8_2 withNumberOfAdultMales(Integer value) {
        setNumberOfAdultMales(value);
        return this;
    }

    public MooseDataCardSection_8_2 withNumberOfAdultFemales(Integer value) {
        setNumberOfAdultFemales(value);
        return this;
    }

    public MooseDataCardSection_8_2 withNumberOfYoungMales(Integer value) {
        setNumberOfYoungMales(value);
        return this;
    }

    public MooseDataCardSection_8_2 withNumberOfYoungFemales(Integer value) {
        setNumberOfYoungFemales(value);
        return this;
    }

    public MooseDataCardSection_8_2 withPaymentAmountForEdibleAdults(BigDecimal value) {
        setPaymentAmountForEdibleAdults(value);
        return this;
    }

    public MooseDataCardSection_8_2 withPaymentAmountForEdibleYoungs(BigDecimal value) {
        setPaymentAmountForEdibleYoungs(value);
        return this;
    }

    public MooseDataCardSection_8_2 withTotalNumberOfNonEdibleAdults(Integer value) {
        setTotalNumberOfNonEdibleAdults(value);
        return this;
    }

    public MooseDataCardSection_8_2 withPaymentAmountForNonEdibleAdults(BigDecimal value) {
        setPaymentAmountForNonEdibleAdults(value);
        return this;
    }

    public MooseDataCardSection_8_2 withTotalNumberOfNonEdibleYoungs(Integer value) {
        setTotalNumberOfNonEdibleYoungs(value);
        return this;
    }

    public MooseDataCardSection_8_2 withPaymentAmountForNonEdibleYoungs(BigDecimal value) {
        setPaymentAmountForNonEdibleYoungs(value);
        return this;
    }

    public MooseDataCardSection_8_2 withTotalPaymentAmount(BigDecimal value) {
        setTotalPaymentAmount(value);
        return this;
    }

    @Override
    public MooseDataCardSection_8_2 clone() {
        final MooseDataCardSection_8_2 _newObject;
        try {
            _newObject = ((MooseDataCardSection_8_2) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        return _newObject;
    }

    @Override
    public MooseDataCardSection_8_2 createCopy() {
        final MooseDataCardSection_8_2 _newObject;
        try {
            _newObject = ((MooseDataCardSection_8_2) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        _newObject.numberOfAdultMales = this.numberOfAdultMales;
        _newObject.numberOfAdultFemales = this.numberOfAdultFemales;
        _newObject.numberOfYoungMales = this.numberOfYoungMales;
        _newObject.numberOfYoungFemales = this.numberOfYoungFemales;
        _newObject.paymentAmountForEdibleAdults = this.paymentAmountForEdibleAdults;
        _newObject.paymentAmountForEdibleYoungs = this.paymentAmountForEdibleYoungs;
        _newObject.totalNumberOfNonEdibleAdults = this.totalNumberOfNonEdibleAdults;
        _newObject.paymentAmountForNonEdibleAdults = this.paymentAmountForNonEdibleAdults;
        _newObject.totalNumberOfNonEdibleYoungs = this.totalNumberOfNonEdibleYoungs;
        _newObject.paymentAmountForNonEdibleYoungs = this.paymentAmountForNonEdibleYoungs;
        _newObject.totalPaymentAmount = this.totalPaymentAmount;
        return _newObject;
    }

    @Override
    public MooseDataCardSection_8_2 createCopy(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final MooseDataCardSection_8_2 _newObject;
        try {
            _newObject = ((MooseDataCardSection_8_2) super.clone());
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
        final PropertyTree numberOfAdultMalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfAdultMales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfAdultMalesPropertyTree!= null):((numberOfAdultMalesPropertyTree == null)||(!numberOfAdultMalesPropertyTree.isLeaf())))) {
            _newObject.numberOfAdultMales = this.numberOfAdultMales;
        }
        final PropertyTree numberOfAdultFemalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfAdultFemales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfAdultFemalesPropertyTree!= null):((numberOfAdultFemalesPropertyTree == null)||(!numberOfAdultFemalesPropertyTree.isLeaf())))) {
            _newObject.numberOfAdultFemales = this.numberOfAdultFemales;
        }
        final PropertyTree numberOfYoungMalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfYoungMales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfYoungMalesPropertyTree!= null):((numberOfYoungMalesPropertyTree == null)||(!numberOfYoungMalesPropertyTree.isLeaf())))) {
            _newObject.numberOfYoungMales = this.numberOfYoungMales;
        }
        final PropertyTree numberOfYoungFemalesPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("numberOfYoungFemales"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(numberOfYoungFemalesPropertyTree!= null):((numberOfYoungFemalesPropertyTree == null)||(!numberOfYoungFemalesPropertyTree.isLeaf())))) {
            _newObject.numberOfYoungFemales = this.numberOfYoungFemales;
        }
        final PropertyTree paymentAmountForEdibleAdultsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForEdibleAdults"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForEdibleAdultsPropertyTree!= null):((paymentAmountForEdibleAdultsPropertyTree == null)||(!paymentAmountForEdibleAdultsPropertyTree.isLeaf())))) {
            _newObject.paymentAmountForEdibleAdults = this.paymentAmountForEdibleAdults;
        }
        final PropertyTree paymentAmountForEdibleYoungsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForEdibleYoungs"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForEdibleYoungsPropertyTree!= null):((paymentAmountForEdibleYoungsPropertyTree == null)||(!paymentAmountForEdibleYoungsPropertyTree.isLeaf())))) {
            _newObject.paymentAmountForEdibleYoungs = this.paymentAmountForEdibleYoungs;
        }
        final PropertyTree totalNumberOfNonEdibleAdultsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("totalNumberOfNonEdibleAdults"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(totalNumberOfNonEdibleAdultsPropertyTree!= null):((totalNumberOfNonEdibleAdultsPropertyTree == null)||(!totalNumberOfNonEdibleAdultsPropertyTree.isLeaf())))) {
            _newObject.totalNumberOfNonEdibleAdults = this.totalNumberOfNonEdibleAdults;
        }
        final PropertyTree paymentAmountForNonEdibleAdultsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForNonEdibleAdults"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForNonEdibleAdultsPropertyTree!= null):((paymentAmountForNonEdibleAdultsPropertyTree == null)||(!paymentAmountForNonEdibleAdultsPropertyTree.isLeaf())))) {
            _newObject.paymentAmountForNonEdibleAdults = this.paymentAmountForNonEdibleAdults;
        }
        final PropertyTree totalNumberOfNonEdibleYoungsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("totalNumberOfNonEdibleYoungs"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(totalNumberOfNonEdibleYoungsPropertyTree!= null):((totalNumberOfNonEdibleYoungsPropertyTree == null)||(!totalNumberOfNonEdibleYoungsPropertyTree.isLeaf())))) {
            _newObject.totalNumberOfNonEdibleYoungs = this.totalNumberOfNonEdibleYoungs;
        }
        final PropertyTree paymentAmountForNonEdibleYoungsPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("paymentAmountForNonEdibleYoungs"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(paymentAmountForNonEdibleYoungsPropertyTree!= null):((paymentAmountForNonEdibleYoungsPropertyTree == null)||(!paymentAmountForNonEdibleYoungsPropertyTree.isLeaf())))) {
            _newObject.paymentAmountForNonEdibleYoungs = this.paymentAmountForNonEdibleYoungs;
        }
        final PropertyTree totalPaymentAmountPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("totalPaymentAmount"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(totalPaymentAmountPropertyTree!= null):((totalPaymentAmountPropertyTree == null)||(!totalPaymentAmountPropertyTree.isLeaf())))) {
            _newObject.totalPaymentAmount = this.totalPaymentAmount;
        }
        return _newObject;
    }

    @Override
    public MooseDataCardSection_8_2 copyExcept(final PropertyTree _propertyTree) {
        return createCopy(_propertyTree, PropertyTreeUse.EXCLUDE);
    }

    @Override
    public MooseDataCardSection_8_2 copyOnly(final PropertyTree _propertyTree) {
        return createCopy(_propertyTree, PropertyTreeUse.INCLUDE);
    }

    public static class Select
        extends MooseDataCardSection_8_2 .Selector<MooseDataCardSection_8_2 .Select, Void>
    {


        Select() {
            super(null, null, null);
        }

        public static MooseDataCardSection_8_2 .Select _root() {
            return new MooseDataCardSection_8_2 .Select();
        }

    }

    public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
        extends com.kscs.util.jaxb.Selector<TRoot, TParent>
    {

        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfAdultMales = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfAdultFemales = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfYoungMales = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfYoungFemales = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForEdibleAdults = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForEdibleYoungs = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> totalNumberOfNonEdibleAdults = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForNonEdibleAdults = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> totalNumberOfNonEdibleYoungs = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForNonEdibleYoungs = null;
        private com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> totalPaymentAmount = null;

        public Selector(final TRoot root, final TParent parent, final String propertyName) {
            super(root, parent, propertyName);
        }

        @Override
        public Map<String, PropertyTree> buildChildren() {
            final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
            products.putAll(super.buildChildren());
            if (this.numberOfAdultMales!= null) {
                products.put("numberOfAdultMales", this.numberOfAdultMales.init());
            }
            if (this.numberOfAdultFemales!= null) {
                products.put("numberOfAdultFemales", this.numberOfAdultFemales.init());
            }
            if (this.numberOfYoungMales!= null) {
                products.put("numberOfYoungMales", this.numberOfYoungMales.init());
            }
            if (this.numberOfYoungFemales!= null) {
                products.put("numberOfYoungFemales", this.numberOfYoungFemales.init());
            }
            if (this.paymentAmountForEdibleAdults!= null) {
                products.put("paymentAmountForEdibleAdults", this.paymentAmountForEdibleAdults.init());
            }
            if (this.paymentAmountForEdibleYoungs!= null) {
                products.put("paymentAmountForEdibleYoungs", this.paymentAmountForEdibleYoungs.init());
            }
            if (this.totalNumberOfNonEdibleAdults!= null) {
                products.put("totalNumberOfNonEdibleAdults", this.totalNumberOfNonEdibleAdults.init());
            }
            if (this.paymentAmountForNonEdibleAdults!= null) {
                products.put("paymentAmountForNonEdibleAdults", this.paymentAmountForNonEdibleAdults.init());
            }
            if (this.totalNumberOfNonEdibleYoungs!= null) {
                products.put("totalNumberOfNonEdibleYoungs", this.totalNumberOfNonEdibleYoungs.init());
            }
            if (this.paymentAmountForNonEdibleYoungs!= null) {
                products.put("paymentAmountForNonEdibleYoungs", this.paymentAmountForNonEdibleYoungs.init());
            }
            if (this.totalPaymentAmount!= null) {
                products.put("totalPaymentAmount", this.totalPaymentAmount.init());
            }
            return products;
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfAdultMales() {
            return ((this.numberOfAdultMales == null)?this.numberOfAdultMales = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "numberOfAdultMales"):this.numberOfAdultMales);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfAdultFemales() {
            return ((this.numberOfAdultFemales == null)?this.numberOfAdultFemales = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "numberOfAdultFemales"):this.numberOfAdultFemales);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfYoungMales() {
            return ((this.numberOfYoungMales == null)?this.numberOfYoungMales = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "numberOfYoungMales"):this.numberOfYoungMales);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> numberOfYoungFemales() {
            return ((this.numberOfYoungFemales == null)?this.numberOfYoungFemales = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "numberOfYoungFemales"):this.numberOfYoungFemales);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForEdibleAdults() {
            return ((this.paymentAmountForEdibleAdults == null)?this.paymentAmountForEdibleAdults = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "paymentAmountForEdibleAdults"):this.paymentAmountForEdibleAdults);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForEdibleYoungs() {
            return ((this.paymentAmountForEdibleYoungs == null)?this.paymentAmountForEdibleYoungs = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "paymentAmountForEdibleYoungs"):this.paymentAmountForEdibleYoungs);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> totalNumberOfNonEdibleAdults() {
            return ((this.totalNumberOfNonEdibleAdults == null)?this.totalNumberOfNonEdibleAdults = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "totalNumberOfNonEdibleAdults"):this.totalNumberOfNonEdibleAdults);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForNonEdibleAdults() {
            return ((this.paymentAmountForNonEdibleAdults == null)?this.paymentAmountForNonEdibleAdults = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "paymentAmountForNonEdibleAdults"):this.paymentAmountForNonEdibleAdults);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> totalNumberOfNonEdibleYoungs() {
            return ((this.totalNumberOfNonEdibleYoungs == null)?this.totalNumberOfNonEdibleYoungs = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "totalNumberOfNonEdibleYoungs"):this.totalNumberOfNonEdibleYoungs);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> paymentAmountForNonEdibleYoungs() {
            return ((this.paymentAmountForNonEdibleYoungs == null)?this.paymentAmountForNonEdibleYoungs = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "paymentAmountForNonEdibleYoungs"):this.paymentAmountForNonEdibleYoungs);
        }

        public com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>> totalPaymentAmount() {
            return ((this.totalPaymentAmount == null)?this.totalPaymentAmount = new com.kscs.util.jaxb.Selector<TRoot, MooseDataCardSection_8_2 .Selector<TRoot, TParent>>(this._root, this, "totalPaymentAmount"):this.totalPaymentAmount);
        }

    }

}
