
package org.tempuri;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SoSo", targetNamespace = "http://tempuri.org/", wsdlLocation = "/wsdl/vtj-haku.wsdl")
public class SoSo
    extends Service
{

    private final static URL SOSO_WSDL_LOCATION;
    private final static WebServiceException SOSO_EXCEPTION;
    private final static QName SOSO_QNAME = new QName("http://tempuri.org/", "SoSo");

    static {
        SOSO_WSDL_LOCATION = org.tempuri.SoSo.class.getResource("/wsdl/vtj-haku.wsdl");
        WebServiceException e = null;
        if (SOSO_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/wsdl/vtj-haku.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        SOSO_EXCEPTION = e;
    }

    public SoSo() {
        super(__getWsdlLocation(), SOSO_QNAME);
    }

    public SoSo(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOSO_QNAME, features);
    }

    public SoSo(URL wsdlLocation) {
        super(wsdlLocation, SOSO_QNAME);
    }

    public SoSo(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOSO_QNAME, features);
    }

    public SoSo(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SoSo(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SoSoSoap
     */
    @WebEndpoint(name = "SoSoSoap")
    public SoSoSoap getSoSoSoap() {
        return super.getPort(new QName("http://tempuri.org/", "SoSoSoap"), SoSoSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SoSoSoap
     */
    @WebEndpoint(name = "SoSoSoap")
    public SoSoSoap getSoSoSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "SoSoSoap"), SoSoSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOSO_EXCEPTION!= null) {
            throw SOSO_EXCEPTION;
        }
        return SOSO_WSDL_LOCATION;
    }

}
